#
# This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not
# distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

import os

SConscript('../../Scripts/SCons/Shared.sconscript.py')
Import('*')

env = baseEnv.Clone()
env['CCFLAGS'] += baseEnv['SHCCFLAGS'][1:]
env['CPPDEFINES'] += ['AL_ALEXT_PROTOTYPES', 'AL_LIBTYPE_STATIC', 'HAVE_FLOAT_H', 'HAVE_STDINT_H',
                      'HAVE_GCC_DESTRUCTOR', 'HAVE_GUIDDEF_H', 'HAVE_MALLOC_H']
env['CPPPATH'] += ['#/Source', '#/Source/Alc', '#/Source/include', '#/Source/OpenAL32/include']

if platform == 'Windows':
    env['CPPDEFINES'] += [{'restrict': '__restrict', 'strcasecmp': '_stricmp', 'strncasecmp': '_strnicmp'},
                          'HAVE_DSOUND', 'HAVE_WINDOWS_H', '_TIMESPEC_DEFINED']

elif platform == 'Android':
    env['CPPDEFINES'] += ['HAVE_OPENSL']
    if architecture == 'ARMv7':
        env['CPPDEFINES'] += ['HAVE_ARM_NEON_H']
        env['CCFLAGS'] += ['-mfloat-abi=softfp', '-mfpu=neon']

target = 'OpenALSoft'
if compiler.startswith('VisualStudio'):
    target += compiler + {True: 'Debug', False: ''}[isDebugBuild]

result = SConscript('Source/SConscript', variant_dir=baseVariantDir, exports='env target', duplicate=0)

Install(os.path.join('Library', platform, architecture), result)
